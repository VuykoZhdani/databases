SELECT distinct maker, type FROM product WHERE type = "PC" order by maker DESC;
SELECT date FROM pass_in_trip WHERE place like '_c';
SELECT Passenger.name, Pass_in_trip.date FROM Passenger
INNER Join Pass_in_trip ON Passenger.ID_psg = Pass_in_trip.ID_psg;
SELECT class, country FROM Classes 
where not exists(SELECT class FROM Classes WHERE country = 'Ukraine') OR country = 'Ukraine';
select distinct maker from product where type='Laptop' 
and maker not in (select maker from product where type='printer');
select concat('code: ', code) comm_code, 
	concat('model: ', model) comm_model, 
    concat('color: ', color) comm_color, 
    concat('type: ', type) comm_type, 
    concat('price: ', price) comm_price from printer; 
SELECT country, MAX(x) as Quantity, MIN(launched) as Year
FROM (SELECT country, COUNT(*) x , launched 
FROM Ships, Classes WHERE classes.class = ships.class 
GROUP BY country, launched) r
WHERE launched = ANY(SELECT MIN(launched) 
FROM Ships, Classes WHERE ships.class = classes.class GROUP BY country, launched) 
GROUP BY country
Order by Quantity ASC;
select maker, 
	COUNT(pc_id) as pc, 
	COUNT(laptop_id) as laptop, 
    COUNT(printer_id) as printer from product 
	left join (select model as pc_id, model from pc) t1 using(model) 
    left join (select model as laptop_id, model from laptop) t2 using(model) 
    left join (select model as printer_id, model from printer) t3 using(model)
    group by maker
    order by maker;
    select distinct product.maker,
case
when form.count is not null then concat('yes(', form.count, ')')
else 'no' end as laptop from Product
left join (select maker, count(*) as count from Laptop
join Product on laptop.model = product.model group by maker) as form on product.maker = form.maker
order by maker ASC;
select case when count(distinct classes.class) = count(classes.class) 
then classes.class end as unique_ship from classes
union 
select case when count(distinct ships.class) = count(ships.class)
then ships.class end from ships;

select ships.name, outcomes.ship from Ships 
right JOIN outcomes on ships.name = outcomes.ship
where name is null;
